package net.ccbluex.liquidbounce.ui.client.clickgui.neverlose.configimport net.ccbluex.liquidbounce.LiquidBounceimport net.ccbluex.liquidbounce.ui.client.neverlose.Implimport net.ccbluex.liquidbounce.ui.client.neverlose.Mainimport net.ccbluex.liquidbounce.ui.font.Fontsimport me.aquavit.liquidsense.utils.render.RenderUtilsimport org.lwjgl.input.Mouseimport java.awt.Colorimport java.io.Fileobject drawConfig  {    fun flie(mouseX: Int, mouseY: Int , main : Main) {        val file: Array<File>? = LiquidBounce.fileManager.settingsDir.listFiles()        val settings = file ?: return        // Save background        val hoverSave = main.hoverConfig(Impl.coordinateX + 105, Impl.coordinateY + 8, Impl.coordinateX + 153, Impl.coordinateY + 25, mouseX, mouseY, false)        RenderUtils.drawRectBordered(Impl.coordinateX + 105.0, Impl.coordinateY + 8.0, Impl.coordinateX + 153.0, Impl.coordinateY + 25.0, 0.5,                                     if (hoverSave) Color(15, 13, 18).rgb else Color(9, 8, 12).rgb, Color(16, 19, 26).rgb)        Fonts.font17.drawString("Save", Impl.coordinateX + 131f, Impl.coordinateY + 15f, Color(200, 200, 200).rgb)        if (hoverSave && !main.mouseLDown && Mouse.isButtonDown(0)) {            LiquidBounce.commandManager.executeCommands("${LiquidBounce.commandManager.prefix}localsetting save ${Impl.configname} all")        }        // config background        RenderUtils.drawRectBordered(Impl.coordinateX + 160.0, Impl.coordinateY + 8.0, Impl.coordinateX + 230.0,                                     Impl.coordinateY + 25.0 + if (main.openConfig) (settings.size * 15) else 0, 0.5, Color(2, 5, 12).rgb,                                     Color(16, 19, 26).rgb)        // load background        val hoverload = main.hoverConfig(Impl.coordinateX + 237f, Impl.coordinateY + 8f, Impl.coordinateX + 285f, Impl.coordinateY + 25f, mouseX, mouseY, false)        RenderUtils.drawRectBordered(Impl.coordinateX + 237.0, Impl.coordinateY + 8.0, Impl.coordinateX + 285.0, Impl.coordinateY + 25.0, 0.5,                                     if (hoverload) Color(8, 15, 24).rgb else Color(2, 5, 12).rgb, Color(16, 19, 26).rgb)        if (hoverload && !main.mouseLDown && Mouse.isButtonDown(0)) {            LiquidBounce.commandManager.executeCommands("${LiquidBounce.commandManager.prefix}localsetting load ${Impl.configname}")        }        Fonts.font17.drawString("Load", Impl.coordinateX + 257f, Impl.coordinateY + 15f, Color(200, 200, 200).rgb)        main.drawText(Impl.configname, 13, Fonts.font17, Impl.coordinateX.toInt() + 163, Impl.coordinateY.toInt() + 15, Color(200, 200, 200).rgb)        if (main.hoverConfig(Impl.coordinateX + 160f, Impl.coordinateY + 10f, Impl.coordinateX + 230f, Impl.coordinateY + 25f, mouseX, mouseY, true)) {            main.openConfig = !main.openConfig        }        if (main.openConfig) {            var fileHight = 0            for (json in settings) {                val hover =                    main.hoverConfig(Impl.coordinateX + 160f, Impl.coordinateY + 25f + fileHight, Impl.coordinateX + 230f, Impl.coordinateY + 40f + fileHight, mouseX, mouseY,                                false)                if (main.hoverConfig(Impl.coordinateX + 160f, Impl.coordinateY + 25f + fileHight, Impl.coordinateX + 230f, Impl.coordinateY + 40f + fileHight, mouseX, mouseY,                                true)) {                    Impl.configname = json.name                    main.openConfig = !main.openConfig                }                if (hover) RenderUtils.drawRect(Impl.coordinateX + 160.0, Impl.coordinateY + 25.0 + fileHight, Impl.coordinateX + 230.0,                                                Impl.coordinateY + 40.0 + fileHight, Color(16, 19, 26).rgb)                main.drawText(json.name, 13, Fonts.font16, Impl.coordinateX.toInt() + 163, Impl.coordinateY.toInt() + 31 + fileHight, Color(200, 200, 200).rgb)                fileHight += 15            }        }    }}