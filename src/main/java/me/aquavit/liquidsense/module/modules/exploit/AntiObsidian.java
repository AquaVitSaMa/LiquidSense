package me.aquavit.liquidsense.module.modules.exploit;

import me.aquavit.liquidsense.event.EventTarget;
import me.aquavit.liquidsense.event.events.UpdateEvent;
import me.aquavit.liquidsense.module.Module;
import me.aquavit.liquidsense.module.ModuleCategory;
import me.aquavit.liquidsense.module.ModuleInfo;
import net.minecraft.block.Block;
import net.minecraft.item.ItemShears;
import net.minecraft.item.ItemStack;
import net.minecraft.item.ItemSword;
import net.minecraft.item.ItemTool;
import net.minecraft.util.BlockPos;
import net.minecraft.util.EnumFacing;
import net.minecraft.util.Vec3;

@ModuleInfo(name = "AntiObsidian", description = ":/", category = ModuleCategory.EXPLOIT)
public class AntiObsidian extends Module {

    @EventTarget
    public void onUpdate(final UpdateEvent event) {
        BlockPos downpos;
        BlockPos sand = new BlockPos(
                new Vec3(mc.thePlayer.posX, mc.thePlayer.posY + 3.0, mc.thePlayer.posZ));
        Block sandblock = mc.theWorld.getBlockState(sand).getBlock();
        BlockPos forge = new BlockPos(
                new Vec3(mc.thePlayer.posX, mc.thePlayer.posY + 2.0, mc.thePlayer.posZ));
        Block forgeblock = mc.theWorld.getBlockState(forge).getBlock();
        BlockPos obsidianpos = new BlockPos(
                new Vec3(mc.thePlayer.posX, mc.thePlayer.posY + 1.0, mc.thePlayer.posZ));
        Block obsidianblock = mc.theWorld.getBlockState(obsidianpos).getBlock();
        if (obsidianblock == Block.getBlockById(49)) {
            this.bestTool(mc.objectMouseOver.getBlockPos().getX(), mc.objectMouseOver.getBlockPos().getY(),
                    mc.objectMouseOver.getBlockPos().getZ());
            downpos = new BlockPos(
                    new Vec3(mc.thePlayer.posX, mc.thePlayer.posY - 1.0, mc.thePlayer.posZ));
            mc.playerController.onPlayerDamageBlock(downpos, EnumFacing.UP);
        }
        if (forgeblock == Block.getBlockById(61)) {
            this.bestTool(mc.objectMouseOver.getBlockPos().getX(), mc.objectMouseOver.getBlockPos().getY(),
                    mc.objectMouseOver.getBlockPos().getZ());
            downpos = new BlockPos(
                    new Vec3(mc.thePlayer.posX, mc.thePlayer.posY - 1.0, mc.thePlayer.posZ));
            mc.playerController.onPlayerDamageBlock(downpos, EnumFacing.UP);
        }
        if (sandblock == Block.getBlockById(12) || sandblock == Block.getBlockById(13)) {
            this.bestTool(mc.objectMouseOver.getBlockPos().getX(), mc.objectMouseOver.getBlockPos().getY(),
                    mc.objectMouseOver.getBlockPos().getZ());
            downpos = new BlockPos(
                    new Vec3(mc.thePlayer.posX, mc.thePlayer.posY + 3.0, mc.thePlayer.posZ));
            mc.playerController.onPlayerDamageBlock(downpos, EnumFacing.UP);
        }
    }

    public void bestTool(int x, int y, int z) {
        int blockId = Block.getIdFromBlock(mc.theWorld.getBlockState(new BlockPos(x, y, z)).getBlock());
        int bestSlot = 0;
        float f = -1.0f;
        for (int i1 = 36; i1 < 45; ++i1) {
            try {
                ItemStack curSlot = mc.thePlayer.inventoryContainer.getSlot(i1).getStack();
                if (!(curSlot.getItem() instanceof ItemTool) && !(curSlot.getItem() instanceof ItemSword)
                        && !(curSlot.getItem() instanceof ItemShears)
                        || !(curSlot.getStrVsBlock(Block.getBlockById(blockId)) > f))
                    continue;
                bestSlot = i1 - 36;
                f = curSlot.getStrVsBlock(Block.getBlockById(blockId));
                continue;
            } catch (Exception exception) {
                // empty catch block
            }
        }
        if (f != -1.0f) {
            mc.thePlayer.inventory.currentItem = bestSlot;
            mc.playerController.updateController();
        }
    }

}
